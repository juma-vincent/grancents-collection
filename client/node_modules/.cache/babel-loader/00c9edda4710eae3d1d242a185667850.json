{"ast":null,"code":"var _jsxFileName = \"C:\\\\vinsoncode-clothing\\\\src\\\\components\\\\signin\\\\signin.jsx\";\nimport React from \"react\";\nimport \"./signin.scss\";\nimport FormInput from \"./../formInput/formInput\";\nimport CustomButton from \"./../customButton/customButton\";\nimport { SignInContainer, ButtonsBarContainer } from \"./signin.styles\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const [userCrediantials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCrediantials;\n\n  handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Sign in with your email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    handleChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    label: \"email\",\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    handleChange: handleChange,\n    type: \"password\",\n    name: \"password\",\n    label: \"password\",\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Sign with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/vinsoncode-clothing/src/components/signin/signin.jsx"],"names":["React","FormInput","CustomButton","SignInContainer","ButtonsBarContainer","googleSignInStart","emailSignInStart","connect","useState","SignIn","userCrediantials","setCredentials","email","password","handleChange","event","name","value","target","userCredentials","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,iBAArD;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC1D,QAAM,CAACI,gBAAD,EAAmBC,cAAnB,IAAqCH,QAAQ,CAAC;AAClDI,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAnD;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,gBAA5B;;AAEAI,EAAAA,YAAY,GAAIC,KAAD,IAAW;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEAP,IAAAA,cAAc,CAAC,EAAE,GAAGQ,eAAL;AAAsB,OAACH,IAAD,GAAQC;AAA9B,KAAD,CAAd;AACD,GAJD;;AAMAG,EAAAA,YAAY,GAAG,MAAOL,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AACAf,IAAAA,gBAAgB,CAACM,KAAD,EAAQC,QAAR,CAAhB;AACD,GAHD;;AAKA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,eAGE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEN,YADhB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEE,YADhB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,KAAK,EAAED,QALT;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAmBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAER,iBAFX;AAGE,IAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAnBF,CAHF,CADF;AAqCD,CAvDD;;AAyDA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADO;AAExCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAQC,QAAR,KAChBU,QAAQ,CAACjB,gBAAgB,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAMA,eAAeN,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,MAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"./signin.scss\";\r\nimport FormInput from \"./../formInput/formInput\";\r\nimport CustomButton from \"./../customButton/customButton\";\r\n\r\nimport { SignInContainer, ButtonsBarContainer } from \"./signin.styles\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\r\n  const [userCrediantials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = userCrediantials;\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>I already have an account</h2>\r\n      <span>Sign in with your email and password </span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          label=\"email\"\r\n          value={email}\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          value={password}\r\n          required\r\n        />\r\n\r\n        <ButtonsBarContainer>\r\n          <CustomButton type=\"submit\">Sign in</CustomButton>\r\n\r\n          <CustomButton\r\n            type=\"button\"\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign with Google\r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}